!record solution5.rpt

--Student Name: Liang Leran Jenny
--Student ID: 7063167

--PART 1
SELECT O_CLERK, O_CUSTKEY, L_SUPPKEY, SUM(L_QUANTITY) AS TOTAL_NUM_ORDERED_PARTS
FROM LINEITEM JOIN ORDERS ON L_ORDERKEY = O_ORDERKEY
WHERE O_CLERK = 'Clerk#000000522' OR O_CLERK = 'Clerk#000000154'
GROUP BY O_CLERK, O_CUSTKEY, L_SUPPKEY WITH CUBE;

--PART 2
SELECT L_PARTKEY, L_SUPPKEY, MAX(L_DISCOUNT) AS MAX_DISCOUNT
FROM LINEITEM
WHERE L_PARTKEY IN ('7', '8', '9')
GROUP BY L_PARTKEY, L_SUPPKEY WITH ROLLUP;

--PART 3
SELECT YEAR(O_ORDERDATE) AS YEAR, O_CLERK, MIN(L_EXTENDEDPRICE) AS MIN_PRICE
FROM ORDERS JOIN LINEITEM ON O_ORDERKEY = L_ORDERKEY
GROUP BY YEAR(O_ORDERDATE), O_CLERK GROUPING SETS ((YEAR(O_ORDERDATE), O_CLERK));

--PART 4
SELECT PS_PARTKEY, PS_AVAILQTY, MIN(PS_AVAILQTY) OVER (PARTITION BY PS_PARTKEY) AS MIN_AVAILQTY, AVG(PS_AVAILQTY) OVER (PARTITION BY PS_PARTKEY) AS AVG_AVAILQTY
FROM PARTSUPP
WHERE PS_PARTKEY IN ('5','15');

--PART 5
SELECT PS_PARTKEY, PS_AVAILQTY, ROW_NUMBER() OVER (PARTITION BY PS_PARTKEY ORDER BY PS_AVAILQTY DESC) AS RANK
FROM PARTSUPP 
WHERE PS_PARTKEY IN ('10','20');

--PART 6
SELECT PS_PARTKEY, PS_AVAILQTY, AVG(PS_AVAILQTY) OVER (PARTITION BY PS_PARTKEY ORDER BY PS_AVAILQTY ROWS UNBOUNDED PRECEDING) AS AVG_AVAILQTY
FROM PARTSUPP
WHERE PS_PARTKEY IN ('15','25');

!record
